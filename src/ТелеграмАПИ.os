#Использовать json

Функция НовоеСообщение(ПолучательИД, ТекстСообщения) Экспорт
	
	Сообщение = Новый Соответствие;
	Сообщение.Вставить("chat_id", ПолучательИД);
	Сообщение.Вставить("text", ТекстСообщения);
	
	Возврат Сообщение;
	
КонецФункции

Функция НоваяКнопка(ТекстКнопки) Экспорт
	
	Соответствие = Новый Соответствие;
	Соответствие.Вставить("text", ТекстКнопки);
	
	Возврат Соответствие;
	
КонецФункции

Функция НоваяКнопкаОтправитьКонтакт(ТекстКнопки) Экспорт
	
	Соответствие = НоваяКнопка(ТекстКнопки) ;
	Соответствие.Вставить("request_contact", Истина);
	
	Возврат Соответствие;
	
КонецФункции

Функция НоваяКнопкаОтправитьМестоположение(ТекстКнопки) Экспорт
	
	Соответствие = НоваяКнопка(ТекстКнопки) ;
	Соответствие.Вставить("request_location", Истина);
	
	Возврат Соответствие;
	
КонецФункции

// для инлайн клавиатуры
Функция НоваяУРЛКнопка(ТекстКнопки, УРЛ) Экспорт

	Соответствие = НоваяКнопка(ТекстКнопки);
	Соответствие.Вставить("url", УРЛ);
	
	Возврат Соответствие;

КонецФункции

// для инлайн клавиатуры
Функция НоваяКоллбекКнопка(ТекстКнопки, Коллбек) Экспорт

	Соответствие = НоваяКнопка(ТекстКнопки);
	Соответствие.Вставить("callback_data", Коллбек);
	
	Возврат Соответствие;

КонецФункции

Функция ПолучитьРядКнопок(Кнопка1, Кнопка2 = Неопределено, Кнопка3 = Неопределено, Кнопка4 = Неопределено, Кнопка5 = Неопределено) Экспорт
	
	Массив = Новый Массив;
	
	Массив.Добавить(Кнопка1);
	
	Если Кнопка2 <> Неопределено Тогда
		Массив.Добавить(Кнопка2);
	КонецЕсли;
	
	Если Кнопка3 <> Неопределено Тогда
		Массив.Добавить(Кнопка3);
	КонецЕсли;

	Если Кнопка4 <> Неопределено Тогда
		Массив.Добавить(Кнопка4);
	КонецЕсли;

	Если Кнопка5 <> Неопределено Тогда
		Массив.Добавить(Кнопка5);
	КонецЕсли;
	
	Возврат Массив;

КонецФункции	

Функция ПолучитьМассивРядовДляКлавиатуры(Ряд1, Ряд2 = Неопределено, Ряд3 = Неопределено, Ряд4 = Неопределено, Ряд5 = Неопределено) Экспорт
	
	Массив = Новый Массив;
	
	Массив.Добавить(Ряд1);
	
	Если Ряд2 <> Неопределено Тогда
		Массив.Добавить(Ряд2);
	КонецЕсли;
	
	Если Ряд3 <> Неопределено Тогда
		Массив.Добавить(Ряд3);
	КонецЕсли;

	Если Ряд4 <> Неопределено Тогда
		Массив.Добавить(Ряд4);
	КонецЕсли;

	Если Ряд5 <> Неопределено Тогда
		Массив.Добавить(Ряд5);
	КонецЕсли;
	
	Возврат Массив;
	
КонецФункции

Функция ПолучитьКлавиатуру(МассивРядов) Экспорт
	
	Клавиатура = Новый Соответствие;
	Клавиатура.Вставить("keyboard", МассивРядов);
	Клавиатура.Вставить("resize_keyboard", Истина);
	Клавиатура.Вставить("selective", Истина);

	Возврат Клавиатура;
	
КонецФункции

Функция ПолучитьИнлайнКлавиатуру(МассивРядов) Экспорт
	
	Клавиатура = Новый Соответствие;
	Клавиатура.Вставить("inline_keyboard", МассивРядов);

	Возврат Клавиатура;
	
КонецФункции

Функция УдалитьКлавиатуру(Сообщение) Экспорт
	
	Удаление = Новый Структура("remove_keyboard", Истина);

	Сообщение.Вставить("reply_markup", Удаление);
	
КонецФункции

Процедура ДобавитьКлавиатуру(Сообщение, Клавиатура) Экспорт

	Сообщение.Вставить("reply_markup", Клавиатура);
	
КонецПроцедуры

Функция НовыйКоллбекОтвет(ПолучательИД, СообщениеИД) Экспорт

	Ответ = Новый Соответствие;
	Ответ.Вставить("chat_id", ПолучательИД);
	Ответ.Вставить("message_id", СообщениеИД);
	
	Возврат Ответ;

КонецФункции

Функция НовыйКоллбекОтветНаЗапрос(ЗапросИД, Текст, ПоказыватьУведомление = Ложь, УРЛ = Неопределено) Экспорт
	
	Ответ = Новый Соответствие;
	Ответ.Вставить("callback_query_id", ЗапросИД);
	Ответ.Вставить("text", Текст);
	Ответ.Вставить("show_alert", ПоказыватьУведомление);

	Если УРЛ <> Неопределено Тогда
		Ответ.Вставить("url", УРЛ);
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

Функция РедактироватьТекст(Сообщение, ТекстСообщения) Экспорт

	Сообщение.Вставить("text", ТекстСообщения);
	
	Возврат Сообщение;

КонецФункции

Процедура РедактироватьКлавиатуру(Сообщение, Клавиатура) Экспорт

	Сообщение.Вставить("reply_markup", Клавиатура);
	
КонецПроцедуры

Процедура УстановитьФорматСообщения(Сообщение, Формат = "") Экспорт

	Сообщение.Вставить("parse_mode", Формат);
	
КонецПроцедуры

Процедура ОтветитьНаСообщение(Сообщение, message_id) Экспорт

	Сообщение.Вставить("reply_to_message_id", message_id);
	
КонецПроцедуры

Функция НовыйПринудительныйОтвет(Избирательно = Ложь) Экспорт

	СоответствиеВнутреннее  = Новый Соответствие;

	СоответствиеВнутреннее.Вставить("force_reply", Истина);
	СоответствиеВнутреннее.Вставить("selective", Избирательно);

	Возврат СоответствиеВнутреннее;

КонецФункции

// Формирует данные для создания пересылаемого сообщения 
// (Метод forwardMessage)
//
// Параметры:
//  ПолучательИД  - Число - chat_id получателя
//  СообщениеИД  - Число - id пересылаемого сообщения
//  ИзКакогоЧатаИД  - Число - id чата из которого пересылается сообщение
//  БезОповещения  - Булево - Если Истина, то сообщение будет переслано без оповещения получателя
//
// Возвращаемое значение:
//   Структура   - Структура, готовая для передачи в ПереслатьСообщение() в классе ТелеграмБот
//
Функция НовоеПересылаемоеСообщение(ПолучательИД, СообщениеИД, ИзКакогоЧатаИД, БезОповещения = Ложь) Экспорт

	Сообщение = Новый Соответствие;
	Сообщение.Вставить("chat_id", ПолучательИД);
	Сообщение.Вставить("message_id", СообщениеИД);
	Сообщение.Вставить("from_chat_id", ИзКакогоЧатаИД);
	Сообщение.Вставить("disable_notification", БезОповещения);

	Возврат Сообщение;

КонецФункции

// Формирует данные для создания удаляемого сообщения 
// (Метод deleteMessage)
//
// Параметры:
//  ЧатИД        - Число - id чата, где находится сообщение
//  СообщениеИД  - Число - id удаляемого сообщения
//
// Возвращаемое значение:
//   Структура - для передачи в УдалитьСообщение() в классе ТелеграмБот
//
Функция УдаляемоеСообщение(ЧатИД, СообщениеИД) Экспорт

	Структура = Новый Структура;
	Структура.Вставить("chat_id", ЧатИД);
	Структура.Вставить("message_id", СообщениеИД);

	Возврат Структура;

КонецФункции

// Создает каркас для нового опроса (не добавляет варианты ответа!)
// (Метод sendPoll)
//
// Параметры:
//  ПолучательИД  - Число - chat_id получателя
//  ТекстВопроса  - Строка - Текст вопроса, длина 1-255 символов
//  Анонимный  - Булево - Если Ложь, то показывается какой вариант ответа выбрал участник опроса
//  ВозможенМножественныйОтвет  - Булево - Если Истина, то участник может проголосовать за несколько вариантов
//  БезОповещения  - Булево - Если Истина, то сообщение будет переслано без оповещения получателя
//
// Возвращаемое значение:
//   Структура   - Структура, которую дополнительно нужно передать в функцию ДобавитьВариантОтветаНаОпрос()
//
Функция НовыйОпрос(ПолучательИД, ТекстВопроса, Анонимный = Истина, ВозможенМножественныйОтвет = Ложь, БезОповещения = Ложь) Экспорт

	Опрос = Новый Соответствие;
	Опрос.Вставить("chat_id", ПолучательИД);
	Опрос.Вставить("question", ТекстВопроса);
	Опрос.Вставить("is_anonymous", Анонимный);
	Опрос.Вставить("allows_multiple_answers", ВозможенМножественныйОтвет);
	Опрос.Вставить("disable_notification", БезОповещения);
	МассивВариантовОтвета = Новый Массив();
	Опрос.Вставить("options", МассивВариантовОтвета);

	Возврат Опрос;

КонецФункции

// Создает каркас для нового опроса квиз (не добавляет варианты ответа!)
// (Метод sendPoll)
//
// Параметры:
//  ПолучательИД  - Число - chat_id получателя
//  ТекстВопроса  - Строка - Текст вопроса, длинна 1-255 символов
//  Анонимный  - Булево - Если Ложь, то показывается какой вариант ответа выбрал участник опроса
//  БезОповещения  - Булево - Если Истина, то сообщение будет переслано без оповещения получателя
//
// Возвращаемое значение:
//   Структура   - Структура, которую дополнительно нужно передать в функцию ДобавитьВариантОтветаНаОпрос(),
//					по умолчанию признак правильного ответа будет являться первый добавленный ответ,
//					в случае когда требуется явное указание правильного ответа Структуру необходимо передать
//					дополнительно в функцию ДобавитьПравильныйОтветКвиз()			
//
Функция НовыйОпросКвиз(ПолучательИД, ТекстВопроса, Анонимный = Истина, БезОповещения = Ложь) Экспорт

	Опрос = НовыйОпрос(ПолучательИД, ТекстВопроса, Анонимный, , БезОповещения);
	Опрос.Вставить("type", "quiz");

	Возврат Опрос;

КонецФункции

// Добавляет варианты ответа на опрос 
// Необходимо поочередно добавить от 2 до 10 вариантов
// (Метод sendPoll)
//
// Параметры:
//  Опрос  - Структура - То, что вернулось от НовыйОпрос()
//  ВариантОтвета  - Строка - Текст варианта ответа, длина 1-100 символов
//
// Возвращаемое значение:
//   Структура   - Структура, готовая для передачи в ОтправитьОпрос() в классе ТелеграмБот
//
Функция ДобавитьВариантОтветаНаОпрос(Опрос, ВариантОтвета) Экспорт

	Опрос["options"].Добавить(ВариантОтвета);

	Возврат Опрос;

КонецФункции

// Добавляет правильный вариант ответ на опрос 
// Правильный ответ может быть только один
// (Метод sendPoll)
//
// Параметры:
//  Опрос  - Структура - То, что вернулось от НовыйОпрос()
//  ПравильныйОтвет  - Строка - Текст правильного ответа, длина 1-100 символов
//
// Возвращаемое значение:
//   Структура   - Структура, готовая для передачи в ОтправитьОпрос() в классе ТелеграмБот
//
Функция ДобавитьПравильныйОтветКвиз(Опрос, ПравильныйОтвет) Экспорт

	МассивВариантовОтвета = Опрос["options"];

	МассивВариантовОтвета.Добавить(ПравильныйОтвет);
	Опрос.Вставить("correct_option_id", МассивВариантовОтвета.ВГраница());

	Возврат Опрос;

КонецФункции

// Команда бота (BotCommand), элемент массива устанавливаемых команд
// (Метод setMyCommand)
//
// Параметры:
//  Имя        - Строка - Имя команды, длина 1-32 символа
//  Описание   - Строка - Описание команды, длина 3-256 символов
//
// Возвращаемое значение:
//   Структура - команда, добавляемая в массив команд
//
Функция КомандаБота(Имя, Описание) Экспорт
	
	Структура = Новый Структура;
	Структура.Вставить("command", Имя);
	Структура.Вставить("description", Описание);
	
	Возврат Структура;
	
КонецФункции
